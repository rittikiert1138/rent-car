generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
  provider = "mysql"
  // url      = env("DATABASE_URL")
  url      = "mysql://root:@localhost:3306/rent_car"
}

model User {
  user_id     Int           @id @default(autoincrement())
  phone       String        @unique
  username    String        @unique
  password    String
  role        String
  status      Int
  createdBy   Int
  updatedBy   Int
  member      Member[]
  lotto_limit lotto_limit[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Role {
  role_id   Int      @id @default(autoincrement())
  role_name String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Permission {
  permission_id   Int      @id @default(autoincrement())
  permission_name String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model RolePermission {
  role_permission_id Int      @id @default(autoincrement())
  role_id            Int
  permission_id      Int
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model Member {
  member_id   Int            @id @default(autoincrement())
  username    String         @unique @db.VarChar(50)
  password    String
  status      Int
  attemp      Int            @default(0)
  phone       String         @unique @db.VarChar(10)
  balance     Float          @default(0)
  total_bet   Float          @default(0)
  isLogin     Int            @default(0)
  user        User?          @relation(fields: [user_id], references: [user_id])
  user_id     Int?
  transaction Transaction[]
  bank        MemberBank[]
  lotto       member_lotto[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model Transaction {
  transaction_id     Int      @id @default(autoincrement())
  transaction_type   Int
  transaction_status Int
  transaction_slip   String?
  balance            Float    @default(0)
  member             Member   @relation(fields: [member_id], references: [member_id])
  member_id          Int
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model MemberBank {
  member_bank_id    Int      @id @default(autoincrement())
  bank_type         Int
  bank_name         String
  bank_number       String
  bank_account_name String
  member            Member   @relation(fields: [member_id], references: [member_id])
  member_id         Int
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Bank {
  bank_id           Int      @id @default(autoincrement())
  bank_type         Int
  bank_name         String
  bank_number       String
  bank_account_name String
  bank_status       Int
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model otp_system {
  otp_id  Int      @id @default(autoincrement())
  otp     String
  ref     String
  phone   String   @db.VarChar(10)
  expired DateTime
}

// model lotto_type {
//   lotto_type_id     Int      @id @default(autoincrement())
//   lotto_type_name   String   @unique
//   lotto_type_status Int
//   lotto_type_icon   String?
//   lotto_type_color  String?
//   order_seq         Int?
//   lotto_type_width  String
//   createdAt         DateTime @default(now())
//   updatedAt         DateTime @updatedAt
//   lotto             lotto[]
// }

model lotto {
  lotto_id      Int            @id @default(autoincrement())
  lotto_type_id Int
  // lotto_type    lotto_type     @relation(fields: [lotto_type_id], references: [lotto_type_id])
  period        String
  open_time     String
  close_time    String
  lotto_result  lotto_result[]
  status        Int            @default(0)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  member_lotto  member_lotto[]
  lotto_limit   lotto_limit[]
}

model lotto_limit {
  lotto_limit_id   Int                @id @default(autoincrement())
  lotto_id         Int
  lotto            lotto              @relation(fields: [lotto_id], references: [lotto_id])
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  lotto_limit_list lotto_limit_list[]
  user             User?              @relation(fields: [user_id], references: [user_id])
  user_id          Int?
}

model lotto_limit_list {
  lotto_limit_list_id Int         @id @default(autoincrement())
  lotto_limit_id      Int
  lotto_limit         lotto_limit @relation(fields: [lotto_limit_id], references: [lotto_limit_id])
  limit_number        String
  limit_amount        Float
  bet_type            Int
  createdAt           DateTime    @default(now())
  updatedAt           DateTime    @updatedAt
}

model lotto_result {
  lotto_result_id   Int                 @id @default(autoincrement())
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  lotto_id          Int
  lotto             lotto               @relation(fields: [lotto_id], references: [lotto_id])
  lotto_result_list lotto_result_list[]
}

model lotto_result_list {
  lotto_result_list_id Int          @id @default(autoincrement())
  lotto_result_id      Int
  lotto_result         lotto_result @relation(fields: [lotto_result_id], references: [lotto_result_id])
  lotto_result_type    Int
  lotto_result_number  String
  createdAt            DateTime     @default(now())
  updatedAt            DateTime     @updatedAt
}

model member_lotto {
  member_lotto_id   Int                 @id @default(autoincrement())
  lotto_id          Int
  lotto             lotto               @relation(fields: [lotto_id], references: [lotto_id])
  member_id         Int
  member            Member              @relation(fields: [member_id], references: [member_id])
  member_lotto_list member_lotto_list[]
  status            Int                 @default(1)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
}

model member_lotto_list {
  member_lotto_list_id Int          @id @default(autoincrement())
  lotto_id             Int
  member_id            Int
  bet_type             Int
  bet_number           String
  bet_amount           Float
  bet_status           Int //1=กำลังรอ 2 = ถูกหวย 3 = ไม่ถูก
  bet_pay              Float?
  bet_pay_result       Float?
  bet_number_result    String?
  member_lotto_id      Int
  member_lotto         member_lotto @relation(fields: [member_lotto_id], references: [member_lotto_id])
  createdAt            DateTime     @default(now())
  updatedAt            DateTime     @updatedAt
}

model Banner {
  banner_id     Int      @id @default(autoincrement())
  banner_image  String
  banner_status Int
  order_seq     Int?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model flash_news {
  flash_news_id      Int      @id @default(autoincrement())
  flash_news_content String
  flash_news_status  Int
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}
